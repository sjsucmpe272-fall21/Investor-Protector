{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Form, Icon, Input, Message } from 'semantic-ui-react';\nimport React, { Component } from 'react';\nimport Campaign from '../../../../ethereum/campaign';\nimport Layout from '../../../../components/Layout';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport web3 from '../../../../ethereum/web3';\n\nclass RequestNew extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: '',\n      description: '',\n      recipient: '',\n      loading: false,\n      errorMessage: ''\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const campaign = Campaign(this.props.address);\n      const {\n        description,\n        value,\n        recipient\n      } = this.state;\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.createRequest(description, web3.utils.toWei(value, 'ether'), recipient).send({\n          from: accounts[0]\n        });\n        Router.push('/campaigns/[campaign]/requests', `/campaigns/${this.props.address}/requests`);\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  static async getInitialProps(context) {\n    const {\n      campaign\n    } = context.query;\n    return {\n      address: campaign\n    };\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Link, {\n      href: \"/campaigns/[campaign]/requests\",\n      as: `/campaigns/${this.props.address}/requests`\n    }, __jsx(\"a\", {\n      style: {\n        backgroundColor: '#3d3d3d',\n        padding: '10px 20px',\n        borderRadius: '8px'\n      }\n    }, __jsx(Icon, {\n      name: \"chevron left\"\n    }), \"Back\")), __jsx(\"h3\", null, \"Create a Request\"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, __jsx(Form.Field, null, __jsx(\"label\", {\n      style: {\n        color: '#fff'\n      }\n    }, \"Description\"), __jsx(Input, {\n      value: this.state.description,\n      onChange: event => this.setState({\n        description: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", {\n      style: {\n        color: '#fff'\n      }\n    }, \"Value in Ether\"), __jsx(Input, {\n      value: this.state.value,\n      onChange: event => this.setState({\n        value: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", {\n      style: {\n        color: '#fff'\n      }\n    }, \"Recipient\"), __jsx(Input, {\n      value: this.state.recipient,\n      onChange: event => this.setState({\n        recipient: event.target.value\n      })\n    })), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage\n    }), __jsx(Button, {\n      primary: true,\n      loading: this.state.loading\n    }, \"Create!\")));\n  }\n\n}\n\nexport default RequestNew;","map":null,"metadata":{},"sourceType":"module"}